// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: api/v1beta1/groups.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeliverySemantic int32

const (
	DeliverySemantic_UNSPECIFIED   DeliverySemantic = 0
	DeliverySemantic_AT_MOST_ONCE  DeliverySemantic = 1
	DeliverySemantic_AT_LEAST_ONCE DeliverySemantic = 2
	DeliverySemantic_EXACTLY_ONCE  DeliverySemantic = 3
)

// Enum value maps for DeliverySemantic.
var (
	DeliverySemantic_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "AT_MOST_ONCE",
		2: "AT_LEAST_ONCE",
		3: "EXACTLY_ONCE",
	}
	DeliverySemantic_value = map[string]int32{
		"UNSPECIFIED":   0,
		"AT_MOST_ONCE":  1,
		"AT_LEAST_ONCE": 2,
		"EXACTLY_ONCE":  3,
	}
)

func (x DeliverySemantic) Enum() *DeliverySemantic {
	p := new(DeliverySemantic)
	*p = x
	return p
}

func (x DeliverySemantic) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeliverySemantic) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1beta1_groups_proto_enumTypes[0].Descriptor()
}

func (DeliverySemantic) Type() protoreflect.EnumType {
	return &file_api_v1beta1_groups_proto_enumTypes[0]
}

func (x DeliverySemantic) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeliverySemantic.Descriptor instead.
func (DeliverySemantic) EnumDescriptor() ([]byte, []int) {
	return file_api_v1beta1_groups_proto_rawDescGZIP(), []int{0}
}

// ConsumerGroups are used to collect a group of related subscribers that consume events
// together according to some consistency semantic. Subscribers join consumer groups
// by specifying the same group ID. Individual subscribers create their own "group" so
// that they can disconnect and reconnect at the same offset where they left off.
type ConsumerGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID of the group and the project ID found in the API Key of the group.
	Id        []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId []byte `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Optional name for the group for easier identification.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The delivery semantic for handling concurrent reads by multiple consumers.
	// Default is "at most once", a fire-and-forget mode that is also used by Kafka.
	Delivery DeliverySemantic `protobuf:"varint,4,opt,name=delivery,proto3,enum=ensign.v1beta1.DeliverySemantic" json:"delivery,omitempty"`
	// Delivery timeout to wait for an ack if a delivery semantic requires it.
	// Defaults to 20 seconds.
	DeliveryTimeout *durationpb.Duration `protobuf:"bytes,5,opt,name=delivery_timeout,json=deliveryTimeout,proto3" json:"delivery_timeout,omitempty"`
	// A map of the topics consumed by the consumer group and their delivered offsets.
	TopicOffsets map[string]uint64 `protobuf:"bytes,12,rep,name=topic_offsets,json=topicOffsets,proto3" json:"topic_offsets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// IDs of the consumers that have connected to the consumer group.
	Consumers [][]byte               `protobuf:"bytes,13,rep,name=consumers,proto3" json:"consumers,omitempty"`
	Created   *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created,proto3" json:"created,omitempty"`
	Modified  *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=modified,proto3" json:"modified,omitempty"`
}

func (x *ConsumerGroup) Reset() {
	*x = ConsumerGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1beta1_groups_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerGroup) ProtoMessage() {}

func (x *ConsumerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1beta1_groups_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerGroup.ProtoReflect.Descriptor instead.
func (*ConsumerGroup) Descriptor() ([]byte, []int) {
	return file_api_v1beta1_groups_proto_rawDescGZIP(), []int{0}
}

func (x *ConsumerGroup) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ConsumerGroup) GetProjectId() []byte {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *ConsumerGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConsumerGroup) GetDelivery() DeliverySemantic {
	if x != nil {
		return x.Delivery
	}
	return DeliverySemantic_UNSPECIFIED
}

func (x *ConsumerGroup) GetDeliveryTimeout() *durationpb.Duration {
	if x != nil {
		return x.DeliveryTimeout
	}
	return nil
}

func (x *ConsumerGroup) GetTopicOffsets() map[string]uint64 {
	if x != nil {
		return x.TopicOffsets
	}
	return nil
}

func (x *ConsumerGroup) GetConsumers() [][]byte {
	if x != nil {
		return x.Consumers
	}
	return nil
}

func (x *ConsumerGroup) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ConsumerGroup) GetModified() *timestamppb.Timestamp {
	if x != nil {
		return x.Modified
	}
	return nil
}

var File_api_v1beta1_groups_proto protoreflect.FileDescriptor

var file_api_v1beta1_groups_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x65, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x03, 0x0a, 0x0d,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x3c, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x6d, 0x61,
	0x6e, 0x74, 0x69, 0x63, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x44,
	0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x54, 0x0a, 0x0d, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x6e,
	0x73, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x36,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x1a, 0x3f, 0x0a, 0x11, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x5a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x53, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x41, 0x54, 0x5f, 0x4d, 0x4f, 0x53, 0x54, 0x5f, 0x4f, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x41, 0x54, 0x5f, 0x4c, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x4f, 0x4e, 0x43, 0x45, 0x10,
	0x02, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x58, 0x41, 0x43, 0x54, 0x4c, 0x59, 0x5f, 0x4f, 0x4e, 0x43,
	0x45, 0x10, 0x03, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1beta1_groups_proto_rawDescOnce sync.Once
	file_api_v1beta1_groups_proto_rawDescData = file_api_v1beta1_groups_proto_rawDesc
)

func file_api_v1beta1_groups_proto_rawDescGZIP() []byte {
	file_api_v1beta1_groups_proto_rawDescOnce.Do(func() {
		file_api_v1beta1_groups_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1beta1_groups_proto_rawDescData)
	})
	return file_api_v1beta1_groups_proto_rawDescData
}

var file_api_v1beta1_groups_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1beta1_groups_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_v1beta1_groups_proto_goTypes = []interface{}{
	(DeliverySemantic)(0),         // 0: ensign.v1beta1.DeliverySemantic
	(*ConsumerGroup)(nil),         // 1: ensign.v1beta1.ConsumerGroup
	nil,                           // 2: ensign.v1beta1.ConsumerGroup.TopicOffsetsEntry
	(*durationpb.Duration)(nil),   // 3: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_api_v1beta1_groups_proto_depIdxs = []int32{
	0, // 0: ensign.v1beta1.ConsumerGroup.delivery:type_name -> ensign.v1beta1.DeliverySemantic
	3, // 1: ensign.v1beta1.ConsumerGroup.delivery_timeout:type_name -> google.protobuf.Duration
	2, // 2: ensign.v1beta1.ConsumerGroup.topic_offsets:type_name -> ensign.v1beta1.ConsumerGroup.TopicOffsetsEntry
	4, // 3: ensign.v1beta1.ConsumerGroup.created:type_name -> google.protobuf.Timestamp
	4, // 4: ensign.v1beta1.ConsumerGroup.modified:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_v1beta1_groups_proto_init() }
func file_api_v1beta1_groups_proto_init() {
	if File_api_v1beta1_groups_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1beta1_groups_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumerGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1beta1_groups_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1beta1_groups_proto_goTypes,
		DependencyIndexes: file_api_v1beta1_groups_proto_depIdxs,
		EnumInfos:         file_api_v1beta1_groups_proto_enumTypes,
		MessageInfos:      file_api_v1beta1_groups_proto_msgTypes,
	}.Build()
	File_api_v1beta1_groups_proto = out.File
	file_api_v1beta1_groups_proto_rawDesc = nil
	file_api_v1beta1_groups_proto_goTypes = nil
	file_api_v1beta1_groups_proto_depIdxs = nil
}
