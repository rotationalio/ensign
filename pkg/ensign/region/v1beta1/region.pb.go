// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: region/v1beta1/region.proto

package region

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Region enumerates the clouds and regions that are available to Ensign in order to
// ensure region identification and serialiation is as small a data type as possible.
// Region codes are generally broken into parts: the first digit represents the cloud,
// e.g. a region code that starts with 1 is Linode. The second series of three digits
// represents the country, e.g. USA is 840 in the ISO 3166 standard. The three digits
// represents the zone of the datacenter, and is usually cloud specific.
// NOTE: this guide to the enumeration representation is generally about making the
// definition easier to see and parse; but the exact information of the region should
// be looked up using the RegionInfo struct.
type Region int32

const (
	Region_UNKNOWN Region = 0
	// Regions 1-999 are reserved for staging and development regions.
	Region_STG_LKE_US_EAST_1A Region = 1
	// Linode Regions
	Region_LKE_AP_WEST_1A      Region = 1356000
	Region_LKE_CA_CENTRAL_1A   Region = 1124010
	Region_LKE_AP_SOUTHEAST_1A Region = 1036020
	Region_LKE_US_CENTRAL_1A   Region = 1840030
	Region_LKE_US_WEST_1A      Region = 1840040
	Region_LKE_US_SOUTHEAST_1A Region = 1840050
	Region_LKE_US_EAST_1A      Region = 1840060
	Region_LKE_EU_WEST_1A      Region = 1826070
	Region_LKE_AP_SOUTH_1A     Region = 1702080
	Region_LKE_EU_CENTRAL_1A   Region = 1276090
	Region_LKE_AP_NORTHEAST_1A Region = 1392100
	// Google Cloud Regions
	Region_GCP_ASIA_EAST_1A              Region = 2158001
	Region_GCP_ASIA_EAST_1B              Region = 2158002
	Region_GCP_ASIA_EAST_1C              Region = 2158003
	Region_GCP_ASIA_EAST_2A              Region = 2344010
	Region_GCP_ASIA_EAST_2B              Region = 2344011
	Region_GCP_ASIA_EAST_2C              Region = 2344012
	Region_GCP_ASIA_NORTHEAST_1A         Region = 2392020
	Region_GCP_ASIA_NORTHEAST_1B         Region = 2392021
	Region_GCP_ASIA_NORTHEAST_1C         Region = 2392022
	Region_GCP_ASIA_NORTHEAST_2A         Region = 2392030
	Region_GCP_ASIA_NORTHEAST_2B         Region = 2392031
	Region_GCP_ASIA_NORTHEAST_2C         Region = 2392032
	Region_GCP_ASIA_NORTHEAST_3A         Region = 2410040
	Region_GCP_ASIA_NORTHEAST_3B         Region = 2410041
	Region_GCP_ASIA_NORTHEAST_3C         Region = 2410042
	Region_GCP_ASIA_SOUTH_1A             Region = 2356051
	Region_GCP_ASIA_SOUTH_1B             Region = 2356052
	Region_GCP_ASIA_SOUTH_1C             Region = 2356053
	Region_GCP_ASIA_SOUTH_2A             Region = 2356061
	Region_GCP_ASIA_SOUTH_2B             Region = 2356062
	Region_GCP_ASIA_SOUTH_2C             Region = 2356063
	Region_GCP_ASIA_SOUTHEAST_1A         Region = 2702070
	Region_GCP_ASIA_SOUTHEAST_1B         Region = 2702071
	Region_GCP_ASIA_SOUTHEAST_1C         Region = 2702072
	Region_GCP_ASIA_SOUTHEAST_2A         Region = 2360080
	Region_GCP_ASIA_SOUTHEAST_2B         Region = 2360081
	Region_GCP_ASIA_SOUTHEAST_2C         Region = 2360082
	Region_GCP_AUSTRALIA_SOUTHEAST_1A    Region = 2036090
	Region_GCP_AUSTRALIA_SOUTHEAST_1B    Region = 2036091
	Region_GCP_AUSTRALIA_SOUTHEAST_1C    Region = 2036092
	Region_GCP_AUSTRALIA_SOUTHEAST_2A    Region = 2036100
	Region_GCP_AUSTRALIA_SOUTHEAST_2B    Region = 2036101
	Region_GCP_AUSTRALIA_SOUTHEAST_2C    Region = 2036102
	Region_GCP_EUROPE_CENTRAL_2A         Region = 2616110
	Region_GCP_EUROPE_CENTRAL_2B         Region = 2616111
	Region_GCP_EUROPE_CENTRAL_2C         Region = 2616112
	Region_GCP_EUROPE_NORTH_1A           Region = 2246120
	Region_GCP_EUROPE_NORTH_1B           Region = 2246121
	Region_GCP_EUROPE_NORTH_1C           Region = 2246122
	Region_GCP_EUROPE_SOUTHWEST_1A       Region = 2724130
	Region_GCP_EUROPE_SOUTHWEST_1B       Region = 2724131
	Region_GCP_EUROPE_SOUTHWEST_1C       Region = 2724132
	Region_GCP_EUROPE_WEST_1B            Region = 2056141
	Region_GCP_EUROPE_WEST_1C            Region = 2056142
	Region_GCP_EUROPE_WEST_1D            Region = 2056143
	Region_GCP_EUROPE_WEST_12A           Region = 2380150
	Region_GCP_EUROPE_WEST_12B           Region = 2380151
	Region_GCP_EUROPE_WEST_12C           Region = 2380152
	Region_GCP_EUROPE_WEST_2A            Region = 2826160
	Region_GCP_EUROPE_WEST_2B            Region = 2826161
	Region_GCP_EUROPE_WEST_2C            Region = 2826162
	Region_GCP_EUROPE_WEST_3A            Region = 2276170
	Region_GCP_EUROPE_WEST_3B            Region = 2276171
	Region_GCP_EUROPE_WEST_3C            Region = 2276172
	Region_GCP_EUROPE_WEST_4A            Region = 2528180
	Region_GCP_EUROPE_WEST_4B            Region = 2528181
	Region_GCP_EUROPE_WEST_4C            Region = 2528182
	Region_GCP_EUROPE_WEST_6A            Region = 2756190
	Region_GCP_EUROPE_WEST_6B            Region = 2756191
	Region_GCP_EUROPE_WEST_6C            Region = 2756192
	Region_GCP_EUROPE_WEST_8A            Region = 2380200
	Region_GCP_EUROPE_WEST_8B            Region = 2380201
	Region_GCP_EUROPE_WEST_8C            Region = 2380202
	Region_GCP_EUROPE_WEST_9A            Region = 2250210
	Region_GCP_EUROPE_WEST_9B            Region = 2250211
	Region_GCP_EUROPE_WEST_9C            Region = 2250212
	Region_GCP_ME_CENTRAL_1A             Region = 2364220
	Region_GCP_ME_CENTRAL_1B             Region = 2364221
	Region_GCP_ME_CENTRAL_1C             Region = 2364222
	Region_GCP_ME_WEST_1A                Region = 2376230
	Region_GCP_ME_WEST_1B                Region = 2376231
	Region_GCP_ME_WEST_1C                Region = 2376232
	Region_GCP_NORTHAMERICA_NORTHEAST_1A Region = 2124240
	Region_GCP_NORTHAMERICA_NORTHEAST_1B Region = 2124241
	Region_GCP_NORTHAMERICA_NORTHEAST_1C Region = 2124242
	Region_GCP_NORTHAMERICA_NORTHEAST_2A Region = 2124250
	Region_GCP_NORTHAMERICA_NORTHEAST_2B Region = 2124251
	Region_GCP_NORTHAMERICA_NORTHEAST_2C Region = 2124252
	Region_GCP_SOUTHAMERICA_EAST_1A      Region = 2076260
	Region_GCP_SOUTHAMERICA_EAST_1B      Region = 2076261
	Region_GCP_SOUTHAMERICA_EAST_1C      Region = 2076262
	Region_GCP_SOUTHAMERICA_WEST_1A      Region = 2152270
	Region_GCP_SOUTHAMERICA_WEST_1B      Region = 2152271
	Region_GCP_SOUTHAMERICA_WEST_1C      Region = 2152272
	Region_GCP_US_CENTRAL_1A             Region = 2840280
	Region_GCP_US_CENTRAL_1B             Region = 2840281
	Region_GCP_US_CENTRAL_1C             Region = 2840282
	Region_GCP_US_CENTRAL_1F             Region = 2840285
	Region_GCP_US_EAST_1B                Region = 2840291
	Region_GCP_US_EAST_1C                Region = 2840292
	Region_GCP_US_EAST_1D                Region = 2840293
	Region_GCP_US_EAST_4A                Region = 2840300
	Region_GCP_US_EAST_4B                Region = 2840301
	Region_GCP_US_EAST_4C                Region = 2840302
	Region_GCP_US_EAST_5A                Region = 2840310
	Region_GCP_US_EAST_5B                Region = 2840311
	Region_GCP_US_EAST_5C                Region = 2840312
	Region_GCP_US_SOUTH_1A               Region = 2840320
	Region_GCP_US_SOUTH_1B               Region = 2840321
	Region_GCP_US_SOUTH_1C               Region = 2840322
	Region_GCP_US_WEST_1A                Region = 2840330
	Region_GCP_US_WEST_1B                Region = 2840331
	Region_GCP_US_WEST_1C                Region = 2840332
	Region_GCP_US_WEST_2A                Region = 2840340
	Region_GCP_US_WEST_2B                Region = 2840341
	Region_GCP_US_WEST_2C                Region = 2840342
	Region_GCP_US_WEST_3A                Region = 2840350
	Region_GCP_US_WEST_3B                Region = 2840351
	Region_GCP_US_WEST_3C                Region = 2840352
	Region_GCP_US_WEST_4A                Region = 2840360
	Region_GCP_US_WEST_4B                Region = 2840361
	Region_GCP_US_WEST_4C                Region = 2840362
)

// Enum value maps for Region.
var (
	Region_name = map[int32]string{
		0:       "UNKNOWN",
		1:       "STG_LKE_US_EAST_1A",
		1356000: "LKE_AP_WEST_1A",
		1124010: "LKE_CA_CENTRAL_1A",
		1036020: "LKE_AP_SOUTHEAST_1A",
		1840030: "LKE_US_CENTRAL_1A",
		1840040: "LKE_US_WEST_1A",
		1840050: "LKE_US_SOUTHEAST_1A",
		1840060: "LKE_US_EAST_1A",
		1826070: "LKE_EU_WEST_1A",
		1702080: "LKE_AP_SOUTH_1A",
		1276090: "LKE_EU_CENTRAL_1A",
		1392100: "LKE_AP_NORTHEAST_1A",
		2158001: "GCP_ASIA_EAST_1A",
		2158002: "GCP_ASIA_EAST_1B",
		2158003: "GCP_ASIA_EAST_1C",
		2344010: "GCP_ASIA_EAST_2A",
		2344011: "GCP_ASIA_EAST_2B",
		2344012: "GCP_ASIA_EAST_2C",
		2392020: "GCP_ASIA_NORTHEAST_1A",
		2392021: "GCP_ASIA_NORTHEAST_1B",
		2392022: "GCP_ASIA_NORTHEAST_1C",
		2392030: "GCP_ASIA_NORTHEAST_2A",
		2392031: "GCP_ASIA_NORTHEAST_2B",
		2392032: "GCP_ASIA_NORTHEAST_2C",
		2410040: "GCP_ASIA_NORTHEAST_3A",
		2410041: "GCP_ASIA_NORTHEAST_3B",
		2410042: "GCP_ASIA_NORTHEAST_3C",
		2356051: "GCP_ASIA_SOUTH_1A",
		2356052: "GCP_ASIA_SOUTH_1B",
		2356053: "GCP_ASIA_SOUTH_1C",
		2356061: "GCP_ASIA_SOUTH_2A",
		2356062: "GCP_ASIA_SOUTH_2B",
		2356063: "GCP_ASIA_SOUTH_2C",
		2702070: "GCP_ASIA_SOUTHEAST_1A",
		2702071: "GCP_ASIA_SOUTHEAST_1B",
		2702072: "GCP_ASIA_SOUTHEAST_1C",
		2360080: "GCP_ASIA_SOUTHEAST_2A",
		2360081: "GCP_ASIA_SOUTHEAST_2B",
		2360082: "GCP_ASIA_SOUTHEAST_2C",
		2036090: "GCP_AUSTRALIA_SOUTHEAST_1A",
		2036091: "GCP_AUSTRALIA_SOUTHEAST_1B",
		2036092: "GCP_AUSTRALIA_SOUTHEAST_1C",
		2036100: "GCP_AUSTRALIA_SOUTHEAST_2A",
		2036101: "GCP_AUSTRALIA_SOUTHEAST_2B",
		2036102: "GCP_AUSTRALIA_SOUTHEAST_2C",
		2616110: "GCP_EUROPE_CENTRAL_2A",
		2616111: "GCP_EUROPE_CENTRAL_2B",
		2616112: "GCP_EUROPE_CENTRAL_2C",
		2246120: "GCP_EUROPE_NORTH_1A",
		2246121: "GCP_EUROPE_NORTH_1B",
		2246122: "GCP_EUROPE_NORTH_1C",
		2724130: "GCP_EUROPE_SOUTHWEST_1A",
		2724131: "GCP_EUROPE_SOUTHWEST_1B",
		2724132: "GCP_EUROPE_SOUTHWEST_1C",
		2056141: "GCP_EUROPE_WEST_1B",
		2056142: "GCP_EUROPE_WEST_1C",
		2056143: "GCP_EUROPE_WEST_1D",
		2380150: "GCP_EUROPE_WEST_12A",
		2380151: "GCP_EUROPE_WEST_12B",
		2380152: "GCP_EUROPE_WEST_12C",
		2826160: "GCP_EUROPE_WEST_2A",
		2826161: "GCP_EUROPE_WEST_2B",
		2826162: "GCP_EUROPE_WEST_2C",
		2276170: "GCP_EUROPE_WEST_3A",
		2276171: "GCP_EUROPE_WEST_3B",
		2276172: "GCP_EUROPE_WEST_3C",
		2528180: "GCP_EUROPE_WEST_4A",
		2528181: "GCP_EUROPE_WEST_4B",
		2528182: "GCP_EUROPE_WEST_4C",
		2756190: "GCP_EUROPE_WEST_6A",
		2756191: "GCP_EUROPE_WEST_6B",
		2756192: "GCP_EUROPE_WEST_6C",
		2380200: "GCP_EUROPE_WEST_8A",
		2380201: "GCP_EUROPE_WEST_8B",
		2380202: "GCP_EUROPE_WEST_8C",
		2250210: "GCP_EUROPE_WEST_9A",
		2250211: "GCP_EUROPE_WEST_9B",
		2250212: "GCP_EUROPE_WEST_9C",
		2364220: "GCP_ME_CENTRAL_1A",
		2364221: "GCP_ME_CENTRAL_1B",
		2364222: "GCP_ME_CENTRAL_1C",
		2376230: "GCP_ME_WEST_1A",
		2376231: "GCP_ME_WEST_1B",
		2376232: "GCP_ME_WEST_1C",
		2124240: "GCP_NORTHAMERICA_NORTHEAST_1A",
		2124241: "GCP_NORTHAMERICA_NORTHEAST_1B",
		2124242: "GCP_NORTHAMERICA_NORTHEAST_1C",
		2124250: "GCP_NORTHAMERICA_NORTHEAST_2A",
		2124251: "GCP_NORTHAMERICA_NORTHEAST_2B",
		2124252: "GCP_NORTHAMERICA_NORTHEAST_2C",
		2076260: "GCP_SOUTHAMERICA_EAST_1A",
		2076261: "GCP_SOUTHAMERICA_EAST_1B",
		2076262: "GCP_SOUTHAMERICA_EAST_1C",
		2152270: "GCP_SOUTHAMERICA_WEST_1A",
		2152271: "GCP_SOUTHAMERICA_WEST_1B",
		2152272: "GCP_SOUTHAMERICA_WEST_1C",
		2840280: "GCP_US_CENTRAL_1A",
		2840281: "GCP_US_CENTRAL_1B",
		2840282: "GCP_US_CENTRAL_1C",
		2840285: "GCP_US_CENTRAL_1F",
		2840291: "GCP_US_EAST_1B",
		2840292: "GCP_US_EAST_1C",
		2840293: "GCP_US_EAST_1D",
		2840300: "GCP_US_EAST_4A",
		2840301: "GCP_US_EAST_4B",
		2840302: "GCP_US_EAST_4C",
		2840310: "GCP_US_EAST_5A",
		2840311: "GCP_US_EAST_5B",
		2840312: "GCP_US_EAST_5C",
		2840320: "GCP_US_SOUTH_1A",
		2840321: "GCP_US_SOUTH_1B",
		2840322: "GCP_US_SOUTH_1C",
		2840330: "GCP_US_WEST_1A",
		2840331: "GCP_US_WEST_1B",
		2840332: "GCP_US_WEST_1C",
		2840340: "GCP_US_WEST_2A",
		2840341: "GCP_US_WEST_2B",
		2840342: "GCP_US_WEST_2C",
		2840350: "GCP_US_WEST_3A",
		2840351: "GCP_US_WEST_3B",
		2840352: "GCP_US_WEST_3C",
		2840360: "GCP_US_WEST_4A",
		2840361: "GCP_US_WEST_4B",
		2840362: "GCP_US_WEST_4C",
	}
	Region_value = map[string]int32{
		"UNKNOWN":                       0,
		"STG_LKE_US_EAST_1A":            1,
		"LKE_AP_WEST_1A":                1356000,
		"LKE_CA_CENTRAL_1A":             1124010,
		"LKE_AP_SOUTHEAST_1A":           1036020,
		"LKE_US_CENTRAL_1A":             1840030,
		"LKE_US_WEST_1A":                1840040,
		"LKE_US_SOUTHEAST_1A":           1840050,
		"LKE_US_EAST_1A":                1840060,
		"LKE_EU_WEST_1A":                1826070,
		"LKE_AP_SOUTH_1A":               1702080,
		"LKE_EU_CENTRAL_1A":             1276090,
		"LKE_AP_NORTHEAST_1A":           1392100,
		"GCP_ASIA_EAST_1A":              2158001,
		"GCP_ASIA_EAST_1B":              2158002,
		"GCP_ASIA_EAST_1C":              2158003,
		"GCP_ASIA_EAST_2A":              2344010,
		"GCP_ASIA_EAST_2B":              2344011,
		"GCP_ASIA_EAST_2C":              2344012,
		"GCP_ASIA_NORTHEAST_1A":         2392020,
		"GCP_ASIA_NORTHEAST_1B":         2392021,
		"GCP_ASIA_NORTHEAST_1C":         2392022,
		"GCP_ASIA_NORTHEAST_2A":         2392030,
		"GCP_ASIA_NORTHEAST_2B":         2392031,
		"GCP_ASIA_NORTHEAST_2C":         2392032,
		"GCP_ASIA_NORTHEAST_3A":         2410040,
		"GCP_ASIA_NORTHEAST_3B":         2410041,
		"GCP_ASIA_NORTHEAST_3C":         2410042,
		"GCP_ASIA_SOUTH_1A":             2356051,
		"GCP_ASIA_SOUTH_1B":             2356052,
		"GCP_ASIA_SOUTH_1C":             2356053,
		"GCP_ASIA_SOUTH_2A":             2356061,
		"GCP_ASIA_SOUTH_2B":             2356062,
		"GCP_ASIA_SOUTH_2C":             2356063,
		"GCP_ASIA_SOUTHEAST_1A":         2702070,
		"GCP_ASIA_SOUTHEAST_1B":         2702071,
		"GCP_ASIA_SOUTHEAST_1C":         2702072,
		"GCP_ASIA_SOUTHEAST_2A":         2360080,
		"GCP_ASIA_SOUTHEAST_2B":         2360081,
		"GCP_ASIA_SOUTHEAST_2C":         2360082,
		"GCP_AUSTRALIA_SOUTHEAST_1A":    2036090,
		"GCP_AUSTRALIA_SOUTHEAST_1B":    2036091,
		"GCP_AUSTRALIA_SOUTHEAST_1C":    2036092,
		"GCP_AUSTRALIA_SOUTHEAST_2A":    2036100,
		"GCP_AUSTRALIA_SOUTHEAST_2B":    2036101,
		"GCP_AUSTRALIA_SOUTHEAST_2C":    2036102,
		"GCP_EUROPE_CENTRAL_2A":         2616110,
		"GCP_EUROPE_CENTRAL_2B":         2616111,
		"GCP_EUROPE_CENTRAL_2C":         2616112,
		"GCP_EUROPE_NORTH_1A":           2246120,
		"GCP_EUROPE_NORTH_1B":           2246121,
		"GCP_EUROPE_NORTH_1C":           2246122,
		"GCP_EUROPE_SOUTHWEST_1A":       2724130,
		"GCP_EUROPE_SOUTHWEST_1B":       2724131,
		"GCP_EUROPE_SOUTHWEST_1C":       2724132,
		"GCP_EUROPE_WEST_1B":            2056141,
		"GCP_EUROPE_WEST_1C":            2056142,
		"GCP_EUROPE_WEST_1D":            2056143,
		"GCP_EUROPE_WEST_12A":           2380150,
		"GCP_EUROPE_WEST_12B":           2380151,
		"GCP_EUROPE_WEST_12C":           2380152,
		"GCP_EUROPE_WEST_2A":            2826160,
		"GCP_EUROPE_WEST_2B":            2826161,
		"GCP_EUROPE_WEST_2C":            2826162,
		"GCP_EUROPE_WEST_3A":            2276170,
		"GCP_EUROPE_WEST_3B":            2276171,
		"GCP_EUROPE_WEST_3C":            2276172,
		"GCP_EUROPE_WEST_4A":            2528180,
		"GCP_EUROPE_WEST_4B":            2528181,
		"GCP_EUROPE_WEST_4C":            2528182,
		"GCP_EUROPE_WEST_6A":            2756190,
		"GCP_EUROPE_WEST_6B":            2756191,
		"GCP_EUROPE_WEST_6C":            2756192,
		"GCP_EUROPE_WEST_8A":            2380200,
		"GCP_EUROPE_WEST_8B":            2380201,
		"GCP_EUROPE_WEST_8C":            2380202,
		"GCP_EUROPE_WEST_9A":            2250210,
		"GCP_EUROPE_WEST_9B":            2250211,
		"GCP_EUROPE_WEST_9C":            2250212,
		"GCP_ME_CENTRAL_1A":             2364220,
		"GCP_ME_CENTRAL_1B":             2364221,
		"GCP_ME_CENTRAL_1C":             2364222,
		"GCP_ME_WEST_1A":                2376230,
		"GCP_ME_WEST_1B":                2376231,
		"GCP_ME_WEST_1C":                2376232,
		"GCP_NORTHAMERICA_NORTHEAST_1A": 2124240,
		"GCP_NORTHAMERICA_NORTHEAST_1B": 2124241,
		"GCP_NORTHAMERICA_NORTHEAST_1C": 2124242,
		"GCP_NORTHAMERICA_NORTHEAST_2A": 2124250,
		"GCP_NORTHAMERICA_NORTHEAST_2B": 2124251,
		"GCP_NORTHAMERICA_NORTHEAST_2C": 2124252,
		"GCP_SOUTHAMERICA_EAST_1A":      2076260,
		"GCP_SOUTHAMERICA_EAST_1B":      2076261,
		"GCP_SOUTHAMERICA_EAST_1C":      2076262,
		"GCP_SOUTHAMERICA_WEST_1A":      2152270,
		"GCP_SOUTHAMERICA_WEST_1B":      2152271,
		"GCP_SOUTHAMERICA_WEST_1C":      2152272,
		"GCP_US_CENTRAL_1A":             2840280,
		"GCP_US_CENTRAL_1B":             2840281,
		"GCP_US_CENTRAL_1C":             2840282,
		"GCP_US_CENTRAL_1F":             2840285,
		"GCP_US_EAST_1B":                2840291,
		"GCP_US_EAST_1C":                2840292,
		"GCP_US_EAST_1D":                2840293,
		"GCP_US_EAST_4A":                2840300,
		"GCP_US_EAST_4B":                2840301,
		"GCP_US_EAST_4C":                2840302,
		"GCP_US_EAST_5A":                2840310,
		"GCP_US_EAST_5B":                2840311,
		"GCP_US_EAST_5C":                2840312,
		"GCP_US_SOUTH_1A":               2840320,
		"GCP_US_SOUTH_1B":               2840321,
		"GCP_US_SOUTH_1C":               2840322,
		"GCP_US_WEST_1A":                2840330,
		"GCP_US_WEST_1B":                2840331,
		"GCP_US_WEST_1C":                2840332,
		"GCP_US_WEST_2A":                2840340,
		"GCP_US_WEST_2B":                2840341,
		"GCP_US_WEST_2C":                2840342,
		"GCP_US_WEST_3A":                2840350,
		"GCP_US_WEST_3B":                2840351,
		"GCP_US_WEST_3C":                2840352,
		"GCP_US_WEST_4A":                2840360,
		"GCP_US_WEST_4B":                2840361,
		"GCP_US_WEST_4C":                2840362,
	}
)

func (x Region) Enum() *Region {
	p := new(Region)
	*p = x
	return p
}

func (x Region) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Region) Descriptor() protoreflect.EnumDescriptor {
	return file_region_v1beta1_region_proto_enumTypes[0].Descriptor()
}

func (Region) Type() protoreflect.EnumType {
	return &file_region_v1beta1_region_proto_enumTypes[0]
}

func (x Region) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Region.Descriptor instead.
func (Region) EnumDescriptor() ([]byte, []int) {
	return file_region_v1beta1_region_proto_rawDescGZIP(), []int{0}
}

// Geographic metadata for compliance and region-awareness.
type RegionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       Region                 `protobuf:"varint,1,opt,name=id,proto3,enum=region.v1beta1.Region" json:"id,omitempty"`
	Name     string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Country  string                 `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	Zone     string                 `protobuf:"bytes,4,opt,name=zone,proto3" json:"zone,omitempty"`
	Cloud    string                 `protobuf:"bytes,5,opt,name=cloud,proto3" json:"cloud,omitempty"`
	Cluster  string                 `protobuf:"bytes,6,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Modified *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=modified,proto3" json:"modified,omitempty"`
	Created  *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *RegionInfo) Reset() {
	*x = RegionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_region_v1beta1_region_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionInfo) ProtoMessage() {}

func (x *RegionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_region_v1beta1_region_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionInfo.ProtoReflect.Descriptor instead.
func (*RegionInfo) Descriptor() ([]byte, []int) {
	return file_region_v1beta1_region_proto_rawDescGZIP(), []int{0}
}

func (x *RegionInfo) GetId() Region {
	if x != nil {
		return x.Id
	}
	return Region_UNKNOWN
}

func (x *RegionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegionInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *RegionInfo) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *RegionInfo) GetCloud() string {
	if x != nil {
		return x.Cloud
	}
	return ""
}

func (x *RegionInfo) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *RegionInfo) GetModified() *timestamppb.Timestamp {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *RegionInfo) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

var File_region_v1beta1_region_proto protoreflect.FileDescriptor

var file_region_v1beta1_region_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94,
	0x02, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x2a, 0xdb, 0x1a, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x54, 0x47, 0x5f, 0x4c, 0x4b, 0x45, 0x5f, 0x55, 0x53, 0x5f, 0x45, 0x41, 0x53, 0x54,
	0x5f, 0x31, 0x41, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x0e, 0x4c, 0x4b, 0x45, 0x5f, 0x41, 0x50, 0x5f,
	0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x41, 0x10, 0xe0, 0xe1, 0x52, 0x12, 0x17, 0x0a, 0x11, 0x4c,
	0x4b, 0x45, 0x5f, 0x43, 0x41, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x52, 0x41, 0x4c, 0x5f, 0x31, 0x41,
	0x10, 0xaa, 0xcd, 0x44, 0x12, 0x19, 0x0a, 0x13, 0x4c, 0x4b, 0x45, 0x5f, 0x41, 0x50, 0x5f, 0x53,
	0x4f, 0x55, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x41, 0x10, 0xf4, 0x9d, 0x3f, 0x12,
	0x17, 0x0a, 0x11, 0x4c, 0x4b, 0x45, 0x5f, 0x55, 0x53, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x52, 0x41,
	0x4c, 0x5f, 0x31, 0x41, 0x10, 0x9e, 0xa7, 0x70, 0x12, 0x14, 0x0a, 0x0e, 0x4c, 0x4b, 0x45, 0x5f,
	0x55, 0x53, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x41, 0x10, 0xa8, 0xa7, 0x70, 0x12, 0x19,
	0x0a, 0x13, 0x4c, 0x4b, 0x45, 0x5f, 0x55, 0x53, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x45, 0x41,
	0x53, 0x54, 0x5f, 0x31, 0x41, 0x10, 0xb2, 0xa7, 0x70, 0x12, 0x14, 0x0a, 0x0e, 0x4c, 0x4b, 0x45,
	0x5f, 0x55, 0x53, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x41, 0x10, 0xbc, 0xa7, 0x70, 0x12,
	0x14, 0x0a, 0x0e, 0x4c, 0x4b, 0x45, 0x5f, 0x45, 0x55, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31,
	0x41, 0x10, 0x96, 0xba, 0x6f, 0x12, 0x15, 0x0a, 0x0f, 0x4c, 0x4b, 0x45, 0x5f, 0x41, 0x50, 0x5f,
	0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x31, 0x41, 0x10, 0xc0, 0xf1, 0x67, 0x12, 0x17, 0x0a, 0x11,
	0x4c, 0x4b, 0x45, 0x5f, 0x45, 0x55, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x52, 0x41, 0x4c, 0x5f, 0x31,
	0x41, 0x10, 0xba, 0xf1, 0x4d, 0x12, 0x19, 0x0a, 0x13, 0x4c, 0x4b, 0x45, 0x5f, 0x41, 0x50, 0x5f,
	0x4e, 0x4f, 0x52, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x41, 0x10, 0xe4, 0xfb, 0x54,
	0x12, 0x17, 0x0a, 0x10, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x45, 0x41, 0x53,
	0x54, 0x5f, 0x31, 0x41, 0x10, 0xb1, 0xdb, 0x83, 0x01, 0x12, 0x17, 0x0a, 0x10, 0x47, 0x43, 0x50,
	0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x42, 0x10, 0xb2, 0xdb,
	0x83, 0x01, 0x12, 0x17, 0x0a, 0x10, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x45,
	0x41, 0x53, 0x54, 0x5f, 0x31, 0x43, 0x10, 0xb3, 0xdb, 0x83, 0x01, 0x12, 0x17, 0x0a, 0x10, 0x47,
	0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x32, 0x41, 0x10,
	0xca, 0x88, 0x8f, 0x01, 0x12, 0x17, 0x0a, 0x10, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41,
	0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x32, 0x42, 0x10, 0xcb, 0x88, 0x8f, 0x01, 0x12, 0x17, 0x0a,
	0x10, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x32,
	0x43, 0x10, 0xcc, 0x88, 0x8f, 0x01, 0x12, 0x1c, 0x0a, 0x15, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53,
	0x49, 0x41, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x41, 0x10,
	0xd4, 0xff, 0x91, 0x01, 0x12, 0x1c, 0x0a, 0x15, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41,
	0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x42, 0x10, 0xd5, 0xff,
	0x91, 0x01, 0x12, 0x1c, 0x0a, 0x15, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x4e,
	0x4f, 0x52, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x43, 0x10, 0xd6, 0xff, 0x91, 0x01,
	0x12, 0x1c, 0x0a, 0x15, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x4e, 0x4f, 0x52,
	0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x32, 0x41, 0x10, 0xde, 0xff, 0x91, 0x01, 0x12, 0x1c,
	0x0a, 0x15, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48,
	0x45, 0x41, 0x53, 0x54, 0x5f, 0x32, 0x42, 0x10, 0xdf, 0xff, 0x91, 0x01, 0x12, 0x1c, 0x0a, 0x15,
	0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x45, 0x41,
	0x53, 0x54, 0x5f, 0x32, 0x43, 0x10, 0xe0, 0xff, 0x91, 0x01, 0x12, 0x1c, 0x0a, 0x15, 0x47, 0x43,
	0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54,
	0x5f, 0x33, 0x41, 0x10, 0xb8, 0x8c, 0x93, 0x01, 0x12, 0x1c, 0x0a, 0x15, 0x47, 0x43, 0x50, 0x5f,
	0x41, 0x53, 0x49, 0x41, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x33,
	0x42, 0x10, 0xb9, 0x8c, 0x93, 0x01, 0x12, 0x1c, 0x0a, 0x15, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53,
	0x49, 0x41, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x33, 0x43, 0x10,
	0xba, 0x8c, 0x93, 0x01, 0x12, 0x18, 0x0a, 0x11, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41,
	0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x31, 0x41, 0x10, 0xd3, 0xe6, 0x8f, 0x01, 0x12, 0x18,
	0x0a, 0x11, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48,
	0x5f, 0x31, 0x42, 0x10, 0xd4, 0xe6, 0x8f, 0x01, 0x12, 0x18, 0x0a, 0x11, 0x47, 0x43, 0x50, 0x5f,
	0x41, 0x53, 0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x31, 0x43, 0x10, 0xd5, 0xe6,
	0x8f, 0x01, 0x12, 0x18, 0x0a, 0x11, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x53,
	0x4f, 0x55, 0x54, 0x48, 0x5f, 0x32, 0x41, 0x10, 0xdd, 0xe6, 0x8f, 0x01, 0x12, 0x18, 0x0a, 0x11,
	0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x32,
	0x42, 0x10, 0xde, 0xe6, 0x8f, 0x01, 0x12, 0x18, 0x0a, 0x11, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53,
	0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x32, 0x43, 0x10, 0xdf, 0xe6, 0x8f, 0x01,
	0x12, 0x1c, 0x0a, 0x15, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55,
	0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x41, 0x10, 0xf6, 0xf5, 0xa4, 0x01, 0x12, 0x1c,
	0x0a, 0x15, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48,
	0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x42, 0x10, 0xf7, 0xf5, 0xa4, 0x01, 0x12, 0x1c, 0x0a, 0x15,
	0x47, 0x43, 0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x45, 0x41,
	0x53, 0x54, 0x5f, 0x31, 0x43, 0x10, 0xf8, 0xf5, 0xa4, 0x01, 0x12, 0x1c, 0x0a, 0x15, 0x47, 0x43,
	0x50, 0x5f, 0x41, 0x53, 0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54,
	0x5f, 0x32, 0x41, 0x10, 0x90, 0x86, 0x90, 0x01, 0x12, 0x1c, 0x0a, 0x15, 0x47, 0x43, 0x50, 0x5f,
	0x41, 0x53, 0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x32,
	0x42, 0x10, 0x91, 0x86, 0x90, 0x01, 0x12, 0x1c, 0x0a, 0x15, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x53,
	0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x32, 0x43, 0x10,
	0x92, 0x86, 0x90, 0x01, 0x12, 0x20, 0x0a, 0x1a, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x55, 0x53, 0x54,
	0x52, 0x41, 0x4c, 0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f,
	0x31, 0x41, 0x10, 0xfa, 0xa2, 0x7c, 0x12, 0x20, 0x0a, 0x1a, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x55,
	0x53, 0x54, 0x52, 0x41, 0x4c, 0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x45, 0x41, 0x53,
	0x54, 0x5f, 0x31, 0x42, 0x10, 0xfb, 0xa2, 0x7c, 0x12, 0x20, 0x0a, 0x1a, 0x47, 0x43, 0x50, 0x5f,
	0x41, 0x55, 0x53, 0x54, 0x52, 0x41, 0x4c, 0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x45,
	0x41, 0x53, 0x54, 0x5f, 0x31, 0x43, 0x10, 0xfc, 0xa2, 0x7c, 0x12, 0x20, 0x0a, 0x1a, 0x47, 0x43,
	0x50, 0x5f, 0x41, 0x55, 0x53, 0x54, 0x52, 0x41, 0x4c, 0x49, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x54,
	0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x32, 0x41, 0x10, 0x84, 0xa3, 0x7c, 0x12, 0x20, 0x0a, 0x1a,
	0x47, 0x43, 0x50, 0x5f, 0x41, 0x55, 0x53, 0x54, 0x52, 0x41, 0x4c, 0x49, 0x41, 0x5f, 0x53, 0x4f,
	0x55, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x32, 0x42, 0x10, 0x85, 0xa3, 0x7c, 0x12, 0x20,
	0x0a, 0x1a, 0x47, 0x43, 0x50, 0x5f, 0x41, 0x55, 0x53, 0x54, 0x52, 0x41, 0x4c, 0x49, 0x41, 0x5f,
	0x53, 0x4f, 0x55, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x32, 0x43, 0x10, 0x86, 0xa3, 0x7c,
	0x12, 0x1c, 0x0a, 0x15, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x43,
	0x45, 0x4e, 0x54, 0x52, 0x41, 0x4c, 0x5f, 0x32, 0x41, 0x10, 0xae, 0xd6, 0x9f, 0x01, 0x12, 0x1c,
	0x0a, 0x15, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x43, 0x45, 0x4e,
	0x54, 0x52, 0x41, 0x4c, 0x5f, 0x32, 0x42, 0x10, 0xaf, 0xd6, 0x9f, 0x01, 0x12, 0x1c, 0x0a, 0x15,
	0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x52,
	0x41, 0x4c, 0x5f, 0x32, 0x43, 0x10, 0xb0, 0xd6, 0x9f, 0x01, 0x12, 0x1a, 0x0a, 0x13, 0x47, 0x43,
	0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x31,
	0x41, 0x10, 0xe8, 0x8b, 0x89, 0x01, 0x12, 0x1a, 0x0a, 0x13, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55,
	0x52, 0x4f, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x31, 0x42, 0x10, 0xe9, 0x8b,
	0x89, 0x01, 0x12, 0x1a, 0x0a, 0x13, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45,
	0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x5f, 0x31, 0x43, 0x10, 0xea, 0x8b, 0x89, 0x01, 0x12, 0x1e,
	0x0a, 0x17, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x53, 0x4f, 0x55,
	0x54, 0x48, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x41, 0x10, 0xa2, 0xa2, 0xa6, 0x01, 0x12, 0x1e,
	0x0a, 0x17, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x53, 0x4f, 0x55,
	0x54, 0x48, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x42, 0x10, 0xa3, 0xa2, 0xa6, 0x01, 0x12, 0x1e,
	0x0a, 0x17, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x53, 0x4f, 0x55,
	0x54, 0x48, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x43, 0x10, 0xa4, 0xa2, 0xa6, 0x01, 0x12, 0x18,
	0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53,
	0x54, 0x5f, 0x31, 0x42, 0x10, 0xcd, 0xbf, 0x7d, 0x12, 0x18, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f,
	0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x43, 0x10, 0xce,
	0xbf, 0x7d, 0x12, 0x18, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45,
	0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x44, 0x10, 0xcf, 0xbf, 0x7d, 0x12, 0x1a, 0x0a, 0x13,
	0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f,
	0x31, 0x32, 0x41, 0x10, 0xf6, 0xa2, 0x91, 0x01, 0x12, 0x1a, 0x0a, 0x13, 0x47, 0x43, 0x50, 0x5f,
	0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x32, 0x42, 0x10,
	0xf7, 0xa2, 0x91, 0x01, 0x12, 0x1a, 0x0a, 0x13, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f,
	0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x32, 0x43, 0x10, 0xf8, 0xa2, 0x91, 0x01,
	0x12, 0x19, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57,
	0x45, 0x53, 0x54, 0x5f, 0x32, 0x41, 0x10, 0xb0, 0xbf, 0xac, 0x01, 0x12, 0x19, 0x0a, 0x12, 0x47,
	0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x32,
	0x42, 0x10, 0xb1, 0xbf, 0xac, 0x01, 0x12, 0x19, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55,
	0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x32, 0x43, 0x10, 0xb2, 0xbf, 0xac,
	0x01, 0x12, 0x19, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f,
	0x57, 0x45, 0x53, 0x54, 0x5f, 0x33, 0x41, 0x10, 0xca, 0xf6, 0x8a, 0x01, 0x12, 0x19, 0x0a, 0x12,
	0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f,
	0x33, 0x42, 0x10, 0xcb, 0xf6, 0x8a, 0x01, 0x12, 0x19, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x45,
	0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x33, 0x43, 0x10, 0xcc, 0xf6,
	0x8a, 0x01, 0x12, 0x19, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45,
	0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x34, 0x41, 0x10, 0xb4, 0xa7, 0x9a, 0x01, 0x12, 0x19, 0x0a,
	0x12, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54,
	0x5f, 0x34, 0x42, 0x10, 0xb5, 0xa7, 0x9a, 0x01, 0x12, 0x19, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f,
	0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x34, 0x43, 0x10, 0xb6,
	0xa7, 0x9a, 0x01, 0x12, 0x19, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50,
	0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x36, 0x41, 0x10, 0xde, 0x9c, 0xa8, 0x01, 0x12, 0x19,
	0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53,
	0x54, 0x5f, 0x36, 0x42, 0x10, 0xdf, 0x9c, 0xa8, 0x01, 0x12, 0x19, 0x0a, 0x12, 0x47, 0x43, 0x50,
	0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x36, 0x43, 0x10,
	0xe0, 0x9c, 0xa8, 0x01, 0x12, 0x19, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f,
	0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x38, 0x41, 0x10, 0xa8, 0xa3, 0x91, 0x01, 0x12,
	0x19, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45,
	0x53, 0x54, 0x5f, 0x38, 0x42, 0x10, 0xa9, 0xa3, 0x91, 0x01, 0x12, 0x19, 0x0a, 0x12, 0x47, 0x43,
	0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x38, 0x43,
	0x10, 0xaa, 0xa3, 0x91, 0x01, 0x12, 0x19, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52,
	0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x39, 0x41, 0x10, 0xe2, 0xab, 0x89, 0x01,
	0x12, 0x19, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57,
	0x45, 0x53, 0x54, 0x5f, 0x39, 0x42, 0x10, 0xe3, 0xab, 0x89, 0x01, 0x12, 0x19, 0x0a, 0x12, 0x47,
	0x43, 0x50, 0x5f, 0x45, 0x55, 0x52, 0x4f, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x39,
	0x43, 0x10, 0xe4, 0xab, 0x89, 0x01, 0x12, 0x18, 0x0a, 0x11, 0x47, 0x43, 0x50, 0x5f, 0x4d, 0x45,
	0x5f, 0x43, 0x45, 0x4e, 0x54, 0x52, 0x41, 0x4c, 0x5f, 0x31, 0x41, 0x10, 0xbc, 0xa6, 0x90, 0x01,
	0x12, 0x18, 0x0a, 0x11, 0x47, 0x43, 0x50, 0x5f, 0x4d, 0x45, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x52,
	0x41, 0x4c, 0x5f, 0x31, 0x42, 0x10, 0xbd, 0xa6, 0x90, 0x01, 0x12, 0x18, 0x0a, 0x11, 0x47, 0x43,
	0x50, 0x5f, 0x4d, 0x45, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x52, 0x41, 0x4c, 0x5f, 0x31, 0x43, 0x10,
	0xbe, 0xa6, 0x90, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x4d, 0x45, 0x5f, 0x57,
	0x45, 0x53, 0x54, 0x5f, 0x31, 0x41, 0x10, 0xa6, 0x84, 0x91, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47,
	0x43, 0x50, 0x5f, 0x4d, 0x45, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x42, 0x10, 0xa7, 0x84,
	0x91, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x4d, 0x45, 0x5f, 0x57, 0x45, 0x53,
	0x54, 0x5f, 0x31, 0x43, 0x10, 0xa8, 0x84, 0x91, 0x01, 0x12, 0x24, 0x0a, 0x1d, 0x47, 0x43, 0x50,
	0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x41, 0x4d, 0x45, 0x52, 0x49, 0x43, 0x41, 0x5f, 0x4e, 0x4f,
	0x52, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x41, 0x10, 0xd0, 0xd3, 0x81, 0x01, 0x12,
	0x24, 0x0a, 0x1d, 0x47, 0x43, 0x50, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x41, 0x4d, 0x45, 0x52,
	0x49, 0x43, 0x41, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x42,
	0x10, 0xd1, 0xd3, 0x81, 0x01, 0x12, 0x24, 0x0a, 0x1d, 0x47, 0x43, 0x50, 0x5f, 0x4e, 0x4f, 0x52,
	0x54, 0x48, 0x41, 0x4d, 0x45, 0x52, 0x49, 0x43, 0x41, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x45,
	0x41, 0x53, 0x54, 0x5f, 0x31, 0x43, 0x10, 0xd2, 0xd3, 0x81, 0x01, 0x12, 0x24, 0x0a, 0x1d, 0x47,
	0x43, 0x50, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x41, 0x4d, 0x45, 0x52, 0x49, 0x43, 0x41, 0x5f,
	0x4e, 0x4f, 0x52, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x32, 0x41, 0x10, 0xda, 0xd3, 0x81,
	0x01, 0x12, 0x24, 0x0a, 0x1d, 0x47, 0x43, 0x50, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x41, 0x4d,
	0x45, 0x52, 0x49, 0x43, 0x41, 0x5f, 0x4e, 0x4f, 0x52, 0x54, 0x48, 0x45, 0x41, 0x53, 0x54, 0x5f,
	0x32, 0x42, 0x10, 0xdb, 0xd3, 0x81, 0x01, 0x12, 0x24, 0x0a, 0x1d, 0x47, 0x43, 0x50, 0x5f, 0x4e,
	0x4f, 0x52, 0x54, 0x48, 0x41, 0x4d, 0x45, 0x52, 0x49, 0x43, 0x41, 0x5f, 0x4e, 0x4f, 0x52, 0x54,
	0x48, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x32, 0x43, 0x10, 0xdc, 0xd3, 0x81, 0x01, 0x12, 0x1e, 0x0a,
	0x18, 0x47, 0x43, 0x50, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x41, 0x4d, 0x45, 0x52, 0x49, 0x43,
	0x41, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x41, 0x10, 0xe4, 0xdc, 0x7e, 0x12, 0x1e, 0x0a,
	0x18, 0x47, 0x43, 0x50, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x41, 0x4d, 0x45, 0x52, 0x49, 0x43,
	0x41, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x42, 0x10, 0xe5, 0xdc, 0x7e, 0x12, 0x1e, 0x0a,
	0x18, 0x47, 0x43, 0x50, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x41, 0x4d, 0x45, 0x52, 0x49, 0x43,
	0x41, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x43, 0x10, 0xe6, 0xdc, 0x7e, 0x12, 0x1f, 0x0a,
	0x18, 0x47, 0x43, 0x50, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x41, 0x4d, 0x45, 0x52, 0x49, 0x43,
	0x41, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x41, 0x10, 0xce, 0xae, 0x83, 0x01, 0x12, 0x1f,
	0x0a, 0x18, 0x47, 0x43, 0x50, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x41, 0x4d, 0x45, 0x52, 0x49,
	0x43, 0x41, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x42, 0x10, 0xcf, 0xae, 0x83, 0x01, 0x12,
	0x1f, 0x0a, 0x18, 0x47, 0x43, 0x50, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x41, 0x4d, 0x45, 0x52,
	0x49, 0x43, 0x41, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x43, 0x10, 0xd0, 0xae, 0x83, 0x01,
	0x12, 0x18, 0x0a, 0x11, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x52,
	0x41, 0x4c, 0x5f, 0x31, 0x41, 0x10, 0xd8, 0xad, 0xad, 0x01, 0x12, 0x18, 0x0a, 0x11, 0x47, 0x43,
	0x50, 0x5f, 0x55, 0x53, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x52, 0x41, 0x4c, 0x5f, 0x31, 0x42, 0x10,
	0xd9, 0xad, 0xad, 0x01, 0x12, 0x18, 0x0a, 0x11, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x43,
	0x45, 0x4e, 0x54, 0x52, 0x41, 0x4c, 0x5f, 0x31, 0x43, 0x10, 0xda, 0xad, 0xad, 0x01, 0x12, 0x18,
	0x0a, 0x11, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x52, 0x41, 0x4c,
	0x5f, 0x31, 0x46, 0x10, 0xdd, 0xad, 0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f,
	0x55, 0x53, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x42, 0x10, 0xe3, 0xad, 0xad, 0x01, 0x12,
	0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31,
	0x43, 0x10, 0xe4, 0xad, 0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53,
	0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x31, 0x44, 0x10, 0xe5, 0xad, 0xad, 0x01, 0x12, 0x15, 0x0a,
	0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x34, 0x41, 0x10,
	0xec, 0xad, 0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x45,
	0x41, 0x53, 0x54, 0x5f, 0x34, 0x42, 0x10, 0xed, 0xad, 0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47,
	0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x34, 0x43, 0x10, 0xee, 0xad,
	0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x45, 0x41, 0x53,
	0x54, 0x5f, 0x35, 0x41, 0x10, 0xf6, 0xad, 0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50,
	0x5f, 0x55, 0x53, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f, 0x35, 0x42, 0x10, 0xf7, 0xad, 0xad, 0x01,
	0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x45, 0x41, 0x53, 0x54, 0x5f,
	0x35, 0x43, 0x10, 0xf8, 0xad, 0xad, 0x01, 0x12, 0x16, 0x0a, 0x0f, 0x47, 0x43, 0x50, 0x5f, 0x55,
	0x53, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x31, 0x41, 0x10, 0x80, 0xae, 0xad, 0x01, 0x12,
	0x16, 0x0a, 0x0f, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f,
	0x31, 0x42, 0x10, 0x81, 0xae, 0xad, 0x01, 0x12, 0x16, 0x0a, 0x0f, 0x47, 0x43, 0x50, 0x5f, 0x55,
	0x53, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x31, 0x43, 0x10, 0x82, 0xae, 0xad, 0x01, 0x12,
	0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31,
	0x41, 0x10, 0x8a, 0xae, 0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53,
	0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x42, 0x10, 0x8b, 0xae, 0xad, 0x01, 0x12, 0x15, 0x0a,
	0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x31, 0x43, 0x10,
	0x8c, 0xae, 0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x57,
	0x45, 0x53, 0x54, 0x5f, 0x32, 0x41, 0x10, 0x94, 0xae, 0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47,
	0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x32, 0x42, 0x10, 0x95, 0xae,
	0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x57, 0x45, 0x53,
	0x54, 0x5f, 0x32, 0x43, 0x10, 0x96, 0xae, 0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50,
	0x5f, 0x55, 0x53, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x33, 0x41, 0x10, 0x9e, 0xae, 0xad, 0x01,
	0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f,
	0x33, 0x42, 0x10, 0x9f, 0xae, 0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55,
	0x53, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x33, 0x43, 0x10, 0xa0, 0xae, 0xad, 0x01, 0x12, 0x15,
	0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x34, 0x41,
	0x10, 0xa8, 0xae, 0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e, 0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f,
	0x57, 0x45, 0x53, 0x54, 0x5f, 0x34, 0x42, 0x10, 0xa9, 0xae, 0xad, 0x01, 0x12, 0x15, 0x0a, 0x0e,
	0x47, 0x43, 0x50, 0x5f, 0x55, 0x53, 0x5f, 0x57, 0x45, 0x53, 0x54, 0x5f, 0x34, 0x43, 0x10, 0xaa,
	0xae, 0xad, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_region_v1beta1_region_proto_rawDescOnce sync.Once
	file_region_v1beta1_region_proto_rawDescData = file_region_v1beta1_region_proto_rawDesc
)

func file_region_v1beta1_region_proto_rawDescGZIP() []byte {
	file_region_v1beta1_region_proto_rawDescOnce.Do(func() {
		file_region_v1beta1_region_proto_rawDescData = protoimpl.X.CompressGZIP(file_region_v1beta1_region_proto_rawDescData)
	})
	return file_region_v1beta1_region_proto_rawDescData
}

var file_region_v1beta1_region_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_region_v1beta1_region_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_region_v1beta1_region_proto_goTypes = []interface{}{
	(Region)(0),                   // 0: region.v1beta1.Region
	(*RegionInfo)(nil),            // 1: region.v1beta1.RegionInfo
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_region_v1beta1_region_proto_depIdxs = []int32{
	0, // 0: region.v1beta1.RegionInfo.id:type_name -> region.v1beta1.Region
	2, // 1: region.v1beta1.RegionInfo.modified:type_name -> google.protobuf.Timestamp
	2, // 2: region.v1beta1.RegionInfo.created:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_region_v1beta1_region_proto_init() }
func file_region_v1beta1_region_proto_init() {
	if File_region_v1beta1_region_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_region_v1beta1_region_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_region_v1beta1_region_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_region_v1beta1_region_proto_goTypes,
		DependencyIndexes: file_region_v1beta1_region_proto_depIdxs,
		EnumInfos:         file_region_v1beta1_region_proto_enumTypes,
		MessageInfos:      file_region_v1beta1_region_proto_msgTypes,
	}.Build()
	File_region_v1beta1_region_proto = out.File
	file_region_v1beta1_region_proto_rawDesc = nil
	file_region_v1beta1_region_proto_goTypes = nil
	file_region_v1beta1_region_proto_depIdxs = nil
}
