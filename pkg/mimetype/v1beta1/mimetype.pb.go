// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: mimetype/v1beta1/mimetype.proto

package mimetype

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MIME stands for multipurpose internet mail extensions and is a standardized method
// for defining the formatting of files and data of different types. In Ensign, the
// mimetype is used to identify and deserialize event data.
//
// Typically, mimetypes are strings, e.g. "application/json" and can even flexibly
// define encodings such as "application/json; charset=utf-8"; these ensure that
// mimetypes are flexible and can be extended without changing protocols. However, using
// string encoding for events results in a lot of duplication and data size should be as
// small as possible when there are numerous events in the system.
//
// To reduce the size of event messages, this package defines mimetypes as an enum. This
// ensures that only 4 bytes maximum are used for the mimetype, but also means that the
// mimetypes are not as flexible and adding new mimetypes requires adding enum values to
// this package. If your mimetype is not listed here, please submit a pull request to
// ensign to get it added!
type MIME int32

const (
	MIME_UNSPECIFIED MIME = 0
	MIME_UNKNOWN     MIME = 0
	// Default value for textual files that are human-readable and do not contain binary data.
	MIME_TEXT_PLAIN MIME = 1
	// Plain text data-containing types
	MIME_TEXT_CSV      MIME = 2
	MIME_TEXT_HTML     MIME = 3
	MIME_TEXT_CALENDAR MIME = 4
	// Default value for all non-text data types (alias for UNSPECIFIED)
	MIME_APPLICATION_OCTET_STREAM MIME = 0
	// Application data-containing types
	MIME_APPLICATION_JSON       MIME = 50
	MIME_APPLICATION_JSON_UTF8  MIME = 50
	MIME_APPLICATION_JSON_LD    MIME = 51
	MIME_APPLICATION_JSON_LINES MIME = 52
	MIME_APPLICATION_UBJSON     MIME = 53
	MIME_APPLICATION_BSON       MIME = 54
	MIME_APPLICATION_XML        MIME = 100
	MIME_APPLICATION_ATOM       MIME = 101
	// Binary application data-containing types
	MIME_APPLICATION_MSGPACK  MIME = 252
	MIME_APPLICATION_PARQUET  MIME = 253
	MIME_APPLICATION_AVRO     MIME = 254
	MIME_APPLICATION_PROTOBUF MIME = 255
	// Other miscellaneous application types
	MIME_APPLICATION_PDF           MIME = 512
	MIME_APPLICATION_JAVA_ARCHIVE  MIME = 513
	MIME_APPLICATION_PYTHON_PICKLE MIME = 514
	// User-specified mimetypes allow the user to distinguish mimetypes in their
	// applications without specifically setting a mimetype.
	MIME_USER_SPECIFIED0 MIME = 1000
	MIME_USER_SPECIFIED1 MIME = 1001
	MIME_USER_SPECIFIED2 MIME = 1002
	MIME_USER_SPECIFIED3 MIME = 1003
	MIME_USER_SPECIFIED4 MIME = 1004
	MIME_USER_SPECIFIED5 MIME = 1005
	MIME_USER_SPECIFIED6 MIME = 1006
	MIME_USER_SPECIFIED7 MIME = 1007
	MIME_USER_SPECIFIED8 MIME = 1008
	MIME_USER_SPECIFIED9 MIME = 1009
)

// Enum value maps for MIME.
var (
	MIME_name = map[int32]string{
		0: "UNSPECIFIED",
		// Duplicate value: 0: "UNKNOWN",
		1: "TEXT_PLAIN",
		2: "TEXT_CSV",
		3: "TEXT_HTML",
		4: "TEXT_CALENDAR",
		// Duplicate value: 0: "APPLICATION_OCTET_STREAM",
		50: "APPLICATION_JSON",
		// Duplicate value: 50: "APPLICATION_JSON_UTF8",
		51:   "APPLICATION_JSON_LD",
		52:   "APPLICATION_JSON_LINES",
		53:   "APPLICATION_UBJSON",
		54:   "APPLICATION_BSON",
		100:  "APPLICATION_XML",
		101:  "APPLICATION_ATOM",
		252:  "APPLICATION_MSGPACK",
		253:  "APPLICATION_PARQUET",
		254:  "APPLICATION_AVRO",
		255:  "APPLICATION_PROTOBUF",
		512:  "APPLICATION_PDF",
		513:  "APPLICATION_JAVA_ARCHIVE",
		514:  "APPLICATION_PYTHON_PICKLE",
		1000: "USER_SPECIFIED0",
		1001: "USER_SPECIFIED1",
		1002: "USER_SPECIFIED2",
		1003: "USER_SPECIFIED3",
		1004: "USER_SPECIFIED4",
		1005: "USER_SPECIFIED5",
		1006: "USER_SPECIFIED6",
		1007: "USER_SPECIFIED7",
		1008: "USER_SPECIFIED8",
		1009: "USER_SPECIFIED9",
	}
	MIME_value = map[string]int32{
		"UNSPECIFIED":               0,
		"UNKNOWN":                   0,
		"TEXT_PLAIN":                1,
		"TEXT_CSV":                  2,
		"TEXT_HTML":                 3,
		"TEXT_CALENDAR":             4,
		"APPLICATION_OCTET_STREAM":  0,
		"APPLICATION_JSON":          50,
		"APPLICATION_JSON_UTF8":     50,
		"APPLICATION_JSON_LD":       51,
		"APPLICATION_JSON_LINES":    52,
		"APPLICATION_UBJSON":        53,
		"APPLICATION_BSON":          54,
		"APPLICATION_XML":           100,
		"APPLICATION_ATOM":          101,
		"APPLICATION_MSGPACK":       252,
		"APPLICATION_PARQUET":       253,
		"APPLICATION_AVRO":          254,
		"APPLICATION_PROTOBUF":      255,
		"APPLICATION_PDF":           512,
		"APPLICATION_JAVA_ARCHIVE":  513,
		"APPLICATION_PYTHON_PICKLE": 514,
		"USER_SPECIFIED0":           1000,
		"USER_SPECIFIED1":           1001,
		"USER_SPECIFIED2":           1002,
		"USER_SPECIFIED3":           1003,
		"USER_SPECIFIED4":           1004,
		"USER_SPECIFIED5":           1005,
		"USER_SPECIFIED6":           1006,
		"USER_SPECIFIED7":           1007,
		"USER_SPECIFIED8":           1008,
		"USER_SPECIFIED9":           1009,
	}
)

func (x MIME) Enum() *MIME {
	p := new(MIME)
	*p = x
	return p
}

func (x MIME) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MIME) Descriptor() protoreflect.EnumDescriptor {
	return file_mimetype_v1beta1_mimetype_proto_enumTypes[0].Descriptor()
}

func (MIME) Type() protoreflect.EnumType {
	return &file_mimetype_v1beta1_mimetype_proto_enumTypes[0]
}

func (x MIME) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MIME.Descriptor instead.
func (MIME) EnumDescriptor() ([]byte, []int) {
	return file_mimetype_v1beta1_mimetype_proto_rawDescGZIP(), []int{0}
}

var File_mimetype_v1beta1_mimetype_proto protoreflect.FileDescriptor

var file_mimetype_v1beta1_mimetype_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2f, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x10, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2a, 0xdc, 0x05, 0x0a, 0x04, 0x4d, 0x49, 0x4d, 0x45, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x45,
	0x58, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45,
	0x58, 0x54, 0x5f, 0x43, 0x53, 0x56, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x45, 0x58, 0x54,
	0x5f, 0x48, 0x54, 0x4d, 0x4c, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x45, 0x58, 0x54, 0x5f,
	0x43, 0x41, 0x4c, 0x45, 0x4e, 0x44, 0x41, 0x52, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x50,
	0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x43, 0x54, 0x45, 0x54, 0x5f,
	0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x50, 0x50, 0x4c,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x32, 0x12, 0x19,
	0x0a, 0x15, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4a, 0x53,
	0x4f, 0x4e, 0x5f, 0x55, 0x54, 0x46, 0x38, 0x10, 0x32, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x50, 0x50,
	0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x5f, 0x4c, 0x44,
	0x10, 0x33, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x53, 0x10, 0x34, 0x12, 0x16,
	0x0a, 0x12, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x42,
	0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x35, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x53, 0x4f, 0x4e, 0x10, 0x36, 0x12, 0x13, 0x0a, 0x0f,
	0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x58, 0x4d, 0x4c, 0x10,
	0x64, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x41, 0x54, 0x4f, 0x4d, 0x10, 0x65, 0x12, 0x18, 0x0a, 0x13, 0x41, 0x50, 0x50, 0x4c, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x53, 0x47, 0x50, 0x41, 0x43, 0x4b, 0x10, 0xfc,
	0x01, 0x12, 0x18, 0x0a, 0x13, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x50, 0x41, 0x52, 0x51, 0x55, 0x45, 0x54, 0x10, 0xfd, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x41,
	0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x56, 0x52, 0x4f, 0x10,
	0xfe, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x42, 0x55, 0x46, 0x10, 0xff, 0x01, 0x12, 0x14, 0x0a,
	0x0f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x44, 0x46,
	0x10, 0x80, 0x04, 0x12, 0x1d, 0x0a, 0x18, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4a, 0x41, 0x56, 0x41, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x10,
	0x81, 0x04, 0x12, 0x1e, 0x0a, 0x19, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x50, 0x59, 0x54, 0x48, 0x4f, 0x4e, 0x5f, 0x50, 0x49, 0x43, 0x4b, 0x4c, 0x45, 0x10,
	0x82, 0x04, 0x12, 0x14, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x30, 0x10, 0xe8, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x31, 0x10, 0xe9, 0x07, 0x12, 0x14,
	0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x32, 0x10, 0xea, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x33, 0x10, 0xeb, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x34, 0x10, 0xec, 0x07,
	0x12, 0x14, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x35, 0x10, 0xed, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x36, 0x10, 0xee, 0x07, 0x12, 0x14, 0x0a, 0x0f,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x37, 0x10,
	0xef, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x38, 0x10, 0xf0, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x39, 0x10, 0xf1, 0x07, 0x1a, 0x02,
	0x10, 0x01, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x6f, 0x2f, 0x65, 0x6e,
	0x73, 0x69, 0x67, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x3b, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mimetype_v1beta1_mimetype_proto_rawDescOnce sync.Once
	file_mimetype_v1beta1_mimetype_proto_rawDescData = file_mimetype_v1beta1_mimetype_proto_rawDesc
)

func file_mimetype_v1beta1_mimetype_proto_rawDescGZIP() []byte {
	file_mimetype_v1beta1_mimetype_proto_rawDescOnce.Do(func() {
		file_mimetype_v1beta1_mimetype_proto_rawDescData = protoimpl.X.CompressGZIP(file_mimetype_v1beta1_mimetype_proto_rawDescData)
	})
	return file_mimetype_v1beta1_mimetype_proto_rawDescData
}

var file_mimetype_v1beta1_mimetype_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mimetype_v1beta1_mimetype_proto_goTypes = []interface{}{
	(MIME)(0), // 0: mimetype.v1beta1.MIME
}
var file_mimetype_v1beta1_mimetype_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_mimetype_v1beta1_mimetype_proto_init() }
func file_mimetype_v1beta1_mimetype_proto_init() {
	if File_mimetype_v1beta1_mimetype_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mimetype_v1beta1_mimetype_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mimetype_v1beta1_mimetype_proto_goTypes,
		DependencyIndexes: file_mimetype_v1beta1_mimetype_proto_depIdxs,
		EnumInfos:         file_mimetype_v1beta1_mimetype_proto_enumTypes,
	}.Build()
	File_mimetype_v1beta1_mimetype_proto = out.File
	file_mimetype_v1beta1_mimetype_proto_rawDesc = nil
	file_mimetype_v1beta1_mimetype_proto_goTypes = nil
	file_mimetype_v1beta1_mimetype_proto_depIdxs = nil
}
