{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-10-03T13:59:43.519Z",
    "end": "2023-10-03T13:59:55.886Z",
    "duration": 12367,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b2ba4bf1-50ad-43ac-a791-3f44ebd4a9c7",
      "title": "",
      "fullFile": "cypress/e2e/GenerateAPIKey.feature",
      "file": "cypress/e2e/GenerateAPIKey.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d70663c8-33ea-43df-bd24-ee1780416915",
          "title": "Generate API Key",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Generating an API Key workflow",
              "fullTitle": "Generate API Key Generating an API Key workflow",
              "timedOut": null,
              "duration": 5847,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected 'http://localhost:3000/' to include 'app'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected 'http://localhost:3000/' to include 'app'\n    at Context.eval (cypress/e2e/GenerateAPIKey/GenerateAPIKey.ts:8:13)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)",
                "diff": null
              },
              "uuid": "0c690719-2df5-4ba3-8b78-18513619d07c",
              "parentUUID": "d70663c8-33ea-43df-bd24-ee1780416915",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0c690719-2df5-4ba3-8b78-18513619d07c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5847,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reporterEnabled": [
          "mochawesome"
        ],
        "mochawesomeReporterOptions": {
          "reportDir": "cypress/results",
          "overwrite": false,
          "html": false,
          "json": true
        },
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}