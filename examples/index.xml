<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>End-to-End Examples on Ensign Documentation</title><link>https://ensign.rotational.dev/examples/</link><description>Recent content in End-to-End Examples on Ensign Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 17 May 2023 17:03:41 -0400</lastBuildDate><atom:link href="https://ensign.rotational.dev/examples/index.xml" rel="self" type="application/rss+xml"/><item><title>Ensign for Data Scientists</title><link>https://ensign.rotational.dev/examples/data_scientists/</link><pubDate>Wed, 17 May 2023 17:03:41 -0400</pubDate><guid>https://ensign.rotational.dev/examples/data_scientists/</guid><description>What does event-driven data science even look like??
In this tutorial we&amp;rsquo;ll find out! Join along for a tour of implementing an event-driven Natural Language Processing tool that does streaming HTML parsing, entity extraction, and sentiment analysis.
Just here for the code? Check it out here !
Back to the Future Some of the earliest deployed machine learning apps were event-driven.
Spam filtering is an awesome example of a natural use case for online modeling .</description></item><item><title>Ensign for Data Engineers</title><link>https://ensign.rotational.dev/examples/data_engineers/</link><pubDate>Wed, 17 May 2023 17:03:41 -0400</pubDate><guid>https://ensign.rotational.dev/examples/data_engineers/</guid><description>We love data engineers â€” it&amp;rsquo;s how a lot of us got our starts in tech. One of the main reasons we made Ensign is to make it easier for you to put your data in motion. We know that a clumsy ETL routine can quickly turn a data lake into a data landfill.
In this example we&amp;rsquo;ll see how to move data around with Ensign. We&amp;rsquo;ll be calling a weather API and using PyEnsign as a way to both stream and persist weather updates.</description></item></channel></rss>