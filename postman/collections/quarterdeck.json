{
	"info": {
		"_postman_id": "7c91ae3e-b447-47af-aa29-db3df634b3cd",
		"name": "Quarterdeck API",
		"description": "Manages authentication and authorization for the Ensign ecosystem.\n\nContact Support:\n Name: Rotational Labs\n Email: support@rotational.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3711"
	},
	"item": [
		{
			"name": "apikeys",
			"item": [
				{
					"name": "{keyID}",
					"item": [
						{
							"name": "API Key Detail",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apikeys/:keyID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys",
										":keyID"
									],
									"variable": [
										{
											"key": "keyID",
											"value": "<ULIDs>",
											"description": "(Required) The ID of the API Key to perform the operation on."
										}
									]
								},
								"description": "Retrieve an AP IKey by its ID. Most fields of the API Key object are read-only, though some components, such as the secret, are not returned at all, even on a detail request. A Key is returned if the ID can be parsed, is found in the database, and the organization claims in the request match the organization the API Key is assigned to. \n"
							},
							"response": [
								{
									"name": "API Key Detail",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<ULIDs>\",\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"org_id\": \"<ULIDs>\",\n  \"project_id\": \"<ULIDs>\",\n  \"created_by\": \"<ULIDs>\",\n  \"source\": \"<string>\",\n  \"user_agent\": \"<string>\",\n  \"last_used\": \"<RFC3339Nano>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"created\": \"<RFC3339Nano>\",\n  \"modified\": \"<RFC3339Nano>\"\n}"
								},
								{
									"name": "User must be logged in to perform request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Internal error, admins need to address the issue on the server",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "The server is in maintenance mode, please try again later",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"uptime\": \"<string>\",\n  \"version\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "API Key Update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apikeys/:keyID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys",
										":keyID"
									],
									"variable": [
										{
											"key": "keyID",
											"value": "<ULIDs>",
											"description": "(Required) The ID of the API Key to perform the operation on."
										}
									]
								},
								"description": "Update an API Key to change its name or description. Most API Key fields are read-only; in order to \"change\" fields such  as permissions, it is necessary to delete the key and create a new one. The API Key is updated if the ID can be parsed, it is found in the database, and the organization claims in the request match the organization the API Key is assigned to.\n"
							},
							"response": [
								{
									"name": "Updated API Key Detail",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<ULIDs>\",\n  \"client_id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"org_id\": \"<ULIDs>\",\n  \"project_id\": \"<ULIDs>\",\n  \"created_by\": \"<ULIDs>\",\n  \"source\": \"<string>\",\n  \"user_agent\": \"<string>\",\n  \"last_used\": \"<RFC3339Nano>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"created\": \"<RFC3339Nano>\",\n  \"modified\": \"<RFC3339Nano>\"\n}"
								},
								{
									"name": "Invalid request, user should repair the request and try again",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "User must be logged in to perform request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Internal error, admins need to address the issue on the server",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "The server is in maintenance mode, please try again later",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"uptime\": \"<string>\",\n  \"version\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "API Key Delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apikeys/:keyID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys",
										":keyID"
									],
									"variable": [
										{
											"key": "keyID",
											"value": "<ULIDs>",
											"description": "(Required) The ID of the API Key to perform the operation on."
										}
									]
								},
								"description": "Delete an API Key by its ID. This endpoint allows the user to \"revoke\" API Keys so that they can no longer be used for  authentication with Quarterdeck. The API Key is deleted if the ID can be parsed, it is found in the database and the organization id in the claims of the request match the organization the API Key is assigned to. If the key is successfully deleted, this endpoint returns a 204 no content response.\n"
							},
							"response": [
								{
									"name": "API Key Successfully Deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User must be logged in to perform request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Internal error, admins need to address the issue on the server",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "The server is in maintenance mode, please try again later",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/apikeys/:keyID",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"apikeys",
												":keyID"
											],
											"variable": [
												{
													"key": "keyID",
													"value": "<ULIDs>",
													"description": "(Required) The ID of the API Key to perform the operation on."
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"uptime\": \"<string>\",\n  \"version\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "API Keys List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apikeys?project_id=<ULIDS>&page_size=100&next_page_token=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apikeys"
							],
							"query": [
								{
									"key": "project_id",
									"value": "<ULIDS>",
									"description": "Filter results to fetch API Keys for a specific project."
								},
								{
									"key": "page_size",
									"value": "100",
									"description": "Specify the number of results ot return in a paginated request."
								},
								{
									"key": "next_page_token",
									"value": "<string>",
									"description": "Fetch the next page of results in a paginated request using the token provided in the previous page of results."
								}
							]
						},
						"description": "List the APIKeys for the organization of the authenticated user, optionally filtered by project ID. The list response returns a subset of fields in the APIKey object, to get more detail about the API Key use the Detail endpoint.\nThis endpoint returns a paginated response, limited by a default page size of 100 if one is not specified by the user. If there is another page of APIKeys the `next_page_token` field will be populated and this value can be used to make a subsequent response for the next page. Note that in subsequent requests the page size or project ID filters should not be changed.\n"
					},
					"response": [
						{
							"name": "API Keys List",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apikeys?project_id=<ULIDS>&page_size=100&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys"
									],
									"query": [
										{
											"key": "project_id",
											"value": "<ULIDS>"
										},
										{
											"key": "page_size",
											"value": "100"
										},
										{
											"key": "next_page_token",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"apikeys\": [\n    {\n      \"id\": \"<ULIDs>\",\n      \"client_id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"org_id\": \"<ULIDs>\",\n      \"project_id\": \"<ULIDs>\",\n      \"last_used\": \"<RFC3339Nano>\"\n    },\n    {\n      \"id\": \"<ULIDs>\",\n      \"client_id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"org_id\": \"<ULIDs>\",\n      \"project_id\": \"<ULIDs>\",\n      \"last_used\": \"<RFC3339Nano>\"\n    }\n  ],\n  \"next_page_token\": \"<string>\"\n}"
						},
						{
							"name": "Invalid request, user should repair the request and try again",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apikeys?project_id=<ULIDS>&page_size=100&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys"
									],
									"query": [
										{
											"key": "project_id",
											"value": "<ULIDS>"
										},
										{
											"key": "page_size",
											"value": "100"
										},
										{
											"key": "next_page_token",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "User must be logged in to perform request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apikeys?project_id=<ULIDS>&page_size=100&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys"
									],
									"query": [
										{
											"key": "project_id",
											"value": "<ULIDS>"
										},
										{
											"key": "page_size",
											"value": "100"
										},
										{
											"key": "next_page_token",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "If an unknown project ID is supplied a 404 may be returned.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apikeys?project_id=<ULIDS>&page_size=100&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys"
									],
									"query": [
										{
											"key": "project_id",
											"value": "<ULIDS>"
										},
										{
											"key": "page_size",
											"value": "100"
										},
										{
											"key": "next_page_token",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Internal error, admins need to address the issue on the server",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apikeys?project_id=<ULIDS>&page_size=100&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys"
									],
									"query": [
										{
											"key": "project_id",
											"value": "<ULIDS>"
										},
										{
											"key": "page_size",
											"value": "100"
										},
										{
											"key": "next_page_token",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "The server is in maintenance mode, please try again later",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/apikeys?project_id=<ULIDS>&page_size=100&next_page_token=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys"
									],
									"query": [
										{
											"key": "project_id",
											"value": "<ULIDS>"
										},
										{
											"key": "page_size",
											"value": "100"
										},
										{
											"key": "next_page_token",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"uptime\": \"<string>\",\n  \"version\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "API Key Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"project_id\": \"<ULIDs>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/apikeys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apikeys"
							]
						},
						"description": "Create an API Key for the specified project with the specified permissions. Most of the fields on the API Key cannot be updated, so this method is the only way a user can set a key's project_id, source, and permissions  field (all other fields are managed by Quarterdeck). If a user needs to change these fields they must delete  the original key and create a new one.\n**Important**: a successful response to this request is the one and only time a key secret is exposed publicly. The secret is store as an argon2 derived key, so it is impossible for Quarterdeck to return the key to the user at any point after this method is called. The user must be responsible for recording the secret and keeping it safe (and applications should display warnings to this effect). If the secret is lost, the user will have to revoke the key and generate a new one. \n"
					},
					"response": [
						{
							"name": "Created API Key",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"project_id\": \"<ULIDs>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apikeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<ULIDs>\",\n  \"client_id\": \"<string>\",\n  \"client_secret\": \"<string>\",\n  \"name\": \"<string>\",\n  \"org_id\": \"<ULIDs>\",\n  \"project_id\": \"<ULIDs>\",\n  \"created_by\": \"<ULIDs>\",\n  \"source\": \"<string>\",\n  \"user_agent\": \"<string>\",\n  \"last_used\": \"<RFC3339Nano>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"created\": \"<RFC3339Nano>\",\n  \"modified\": \"<RFC3339Nano>\"\n}"
						},
						{
							"name": "Invalid request, user should repair the request and try again",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"project_id\": \"<ULIDs>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apikeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "User must be logged in to perform request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"project_id\": \"<ULIDs>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apikeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Internal error, admins need to address the issue on the server",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"project_id\": \"<ULIDs>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apikeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "The server is in maintenance mode, please try again later",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"project_id\": \"<ULIDs>\",\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"source\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/apikeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apikeys"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\",\n  \"uptime\": \"<string>\",\n  \"version\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Status Check",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/status",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"status"
					]
				},
				"description": "A heartbeat endpoint for checking the status of the server."
			},
			"response": [
				{
					"name": "The status, uptime, and version of the server are returned.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"<string>\",\n  \"uptime\": \"<string>\",\n  \"version\": \"<string>\"\n}"
				},
				{
					"name": "The server is in maintenance mode or is otherwise unavailable.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"<string>\",\n  \"uptime\": \"<string>\",\n  \"version\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Register User",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"pwcheck\": \"<string>\",\n  \"organization\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"terms_agreement\": \"<boolean>\",\n  \"privacy_agreement\": \"<boolean>\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				},
				"description": "Create a new user in a new organization."
			},
			"response": [
				{
					"name": "User and organization created successfully. The details of the new user are returned.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"pwcheck\": \"<string>\",\n  \"organization\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"terms_agreement\": \"<boolean>\",\n  \"privacy_agreement\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"user_id\": \"<string>\",\n  \"org_id\": \"<string>\",\n  \"email\": \"<string>\",\n  \"message\": \"<string>\",\n  \"role\": \"<string>\",\n  \"created\": \"<string>\"\n}"
				},
				{
					"name": "Invalid request, user should repair the request and try again",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"pwcheck\": \"<string>\",\n  \"organization\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"terms_agreement\": \"<boolean>\",\n  \"privacy_agreement\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "A user with the email address or organization with that domain already exists.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"pwcheck\": \"<string>\",\n  \"organization\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"terms_agreement\": \"<boolean>\",\n  \"privacy_agreement\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Internal error, admins need to address the issue on the server",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"pwcheck\": \"<string>\",\n  \"organization\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"terms_agreement\": \"<boolean>\",\n  \"privacy_agreement\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "The server is in maintenance mode, please try again later",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"pwcheck\": \"<string>\",\n  \"organization\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"terms_agreement\": \"<boolean>\",\n  \"privacy_agreement\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"<string>\",\n  \"uptime\": \"<string>\",\n  \"version\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Login User",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"org_id\": \"<string>\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				},
				"description": "User login and authentication via email and password. The user can optionally supply an OrgID to log into a specific organization  that they belong to. An _access token_ and a _refresh token_ are returned that contain the authorization claims of the user. \nThe access token should be added to the Authorize header as a Bearer token for all requests that require authentication. The  refresh token can be used to obtain a new access token after it expires (extending the user's session) without requiring the user  to supply their username and password again.\nThe access token contains claims that help identify the user (e.g. name, email, picture) as well as the ID of the organization the user is currently logged into. A user can only be logged into one organization at a time. Additionally the claims contain the permissions the user has defined by the user's role. The subject of the claims is the ID of the user."
			},
			"response": [
				{
					"name": "Successful authentication",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"org_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
				},
				{
					"name": "Invalid request, user should repair the request and try again",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"org_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Could not authenticate user with the specified credentials. A 403 Forbidden is returned instead of a 401 Unauthorized because reauthenticating with the same request will not solve the problem; instead the user has to supply new credentials.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"org_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Internal error, admins need to address the issue on the server",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"org_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "The server is in maintenance mode, please try again later",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"org_id\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"<string>\",\n  \"uptime\": \"<string>\",\n  \"version\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "API authentication",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"client_id\": \"<string>\",\n  \"client_secret\": \"<string>\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/authenticate",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authenticate"
					]
				},
				"description": "Allows a machine user or service to authenticate with Quarterdeck using an APIKey Client ID and Secret. An _access token_ and a _refresh token_ are returned that contain the authorization claims of the APIKey.\nThe access token should be added to the Authorize header as a Bearer token for all requests that require authentication. The  refresh token can be used to obtain a new access token after it expires (extending the session) without requiring the API Key credentials a second time.\nThe access token contains claims that authorize the API Key specific usage, including a ProjectID, which defines which topics the key can access, and permissions which define the actions the key can take.\n"
			},
			"response": [
				{
					"name": "Successful authentication",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"client_secret\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authenticate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
				},
				{
					"name": "Invalid request, user should repair the request and try again",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"client_secret\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authenticate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Could not authenticate machine user with the specified credentials. A 403 Forbidden is returned instead of a 401 Unauthorized because reauthenticating with the same request will not solve the problem; instead the user has to supply new credentials.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"client_secret\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authenticate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Internal error, admins need to address the issue on the server",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"client_secret\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authenticate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "The server is in maintenance mode, please try again later",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_id\": \"<string>\",\n  \"client_secret\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authenticate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authenticate"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"<string>\",\n  \"uptime\": \"<string>\",\n  \"version\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Refresh access token",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"refresh_token\": \"<string>\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/refresh",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"refresh"
					]
				},
				"description": "Access tokens have an expiration of an hour, in order to maintain long running sessions, a refresh token that is tied with a specific access token is issued at the same time. The refresh token may be used to obtain a new access/refresh token pair, thereby extending the user or api key session without requiring credentials to be authenticated a second time.\nNote that the claims that are returned during refresh may not be the same claims as the original access token (e.g. if the role of a user has changed during the session). This means that an operation that was previously allowed by the original access token may not be allowed after refresh. \n"
			},
			"response": [
				{
					"name": "Successful authentication",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"access_token\": \"<string>\",\n  \"refresh_token\": \"<string>\"\n}"
				},
				{
					"name": "Invalid request, user should repair the request and try again",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Could not authenticate refresh token",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Internal error, admins need to address the issue on the server",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "The server is in maintenance mode, please try again later",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"<string>\",\n  \"uptime\": \"<string>\",\n  \"version\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Projects Create",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"project_id\": \"<ULIDs>\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/projects",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"projects"
					]
				},
				"description": "Tenant manages the projects (collections of related topics and API Keys) but in order for Quarterdeck to assign a project to claims, it needs a verifiable way of linking projects and organizations in its database. Authenticated users can post a project id, and so long as the project id is unique, Quarterdeck will asssociate that id with the organization id in the claims of the requesting user.\n"
			},
			"response": [
				{
					"name": "Created Project",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"project_id\": \"<ULIDs>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"org_id\": \"<ULIDs>\",\n  \"project_id\": \"<ULIDs>\",\n  \"created\": \"<RFC3339Nano>\",\n  \"modified\": \"<RFC3339Nano>\"\n}"
				},
				{
					"name": "Invalid request, user should repair the request and try again",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"project_id\": \"<ULIDs>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "User must be logged in to perform request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"project_id\": \"<ULIDs>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "Internal error, admins need to address the issue on the server",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"project_id\": \"<ULIDs>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"success\": \"<boolean>\",\n  \"error\": \"<string>\"\n}"
				},
				{
					"name": "The server is in maintenance mode, please try again later",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"project_id\": \"<ULIDs>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"<string>\",\n  \"uptime\": \"<string>\",\n  \"version\": \"<string>\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8088/v1",
			"type": "string"
		}
	]
}